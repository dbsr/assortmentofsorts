// Generated by CoffeeScript 1.6.3
var doModal, initFilters, initModal, initTable, killModal;

initTable = function() {
  var $th, dir, direction, icon, th, _i, _len, _ref;
  _ref = $('td', 'thead');
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    th = _ref[_i];
    $th = $(th);
    direction = $th.attr('data-sort-direction');
    if (direction !== '-1') {
      dir = direction === '1' ? 'up' : 'down';
      icon = "icon-circle-arrow-" + dir;
      $th.addClass("td-active");
      $th.append("<i style='margin-left: 1em; position: relative; top: .09em;' class='" + icon + "' />");
    }
    $th.click(function() {
      var param, reverse;
      param = $(this).html().split('<')[0].split(' ').join('_');
      reverse = $(this).attr('data-sort-direction') === '1' ? "0" : '1';
      return window.location.href = "/index?sort=" + param + "&reverse=" + reverse;
    });
  }
  return $('#create_cmd').click(function(event) {
    event.preventDefault();
    return $.get('/pacman-cmd', $('form').serialize());
  });
};

initFilters = function() {
  var filter, _i, _len, _ref, _results;
  _ref = $('a', '#filters');
  _results = [];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    filter = _ref[_i];
    _results.push($(filter).click(function(event) {
      var $f, sep, url;
      event.preventDefault();
      url = window.location.href;
      $f = $(this);
      if ($f.hasClass('active')) {
        $f.removeClass('active');
        $f.addClass('inactive');
        if (url.split('=').length > 2) {
          if (url.match("[&?]" + ($f.attr('id')))[0][0] === "?") {
            url = url.replace("" + ($f.attr('id')) + "=1&", '');
          } else {
            url = url.replace("&" + ($f.attr('id')) + "=1", '');
          }
        } else {
          url = url.replace("\?" + ($f.attr('id')) + "=1", '');
        }
      } else {
        $f.removeClass('inactive');
        $f.addClass('active');
        sep = url.match(/\?/) ? '&' : '?';
        url += "" + sep + ($f.attr('id')) + "=1";
      }
      return window.location.href = url;
    }));
  }
  return _results;
};

initModal = function(link, contentElement) {
  var getText;
  $(contentElement).hide();
  $(link).click(function(event) {
    var cb, pkg, _i, _len, _ref;
    event.preventDefault();
    _ref = $(':checked');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      cb = _ref[_i];
      pkg = $(cb).attr('name');
      $('.packages').append("<p id='" + pkg + "' class='package-list'>" + pkg + "</p>");
    }
    return doModal(contentElement);
  });
  getText = function(separator) {
    var p;
    if (separator == null) {
      separator = ' ';
    }
    return ((function() {
      var _i, _len, _ref, _results;
      _ref = $('p', '.packages');
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        p = _ref[_i];
        _results.push($(p).attr('id'));
      }
      return _results;
    })()).join(separator);
  };
  $('#copy').click(function(event) {
    var text;
    text = getText();
    console.log(text);
    return window.prompt("Copy to clipboard: Ctrl + C, Enter", text);
  });
  return $('#save').click(function(event) {
    var text, url;
    event.preventDefault();
    text = getText(',');
    url = "/download-textfile?packages=" + text;
    return window.open(url, 'Download');
  });
};

doModal = function(contentElement) {
  return $(contentElement).show().addClass('modal');
};

killModal = function(modal) {
  return $(modal).hide();
};

$(function() {
  initTable();
  initFilters();
  return initModal('#selected-packages', '#packages-modal');
});
